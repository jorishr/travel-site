/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
@import url("https://fonts.googleapis.com/css?family=Roboto&display=swap");
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

body {
  font-family: 'Roboto', sans-serif;
  color: #333; }

img {
  max-width: 100%;
  height: auto; }

* {
  box-sizing: border-box; }

a {
  color: #d59541; }

.wrapper {
  padding-left: 1.125rem;
  padding-right: 1.125rem;
  max-width: 1236px;
  margin-left: auto;
  margin-right: auto;
  overflow: hidden; }
  .wrapper--medium {
    max-width: 976px; }
  .wrapper--narrow {
    max-width: 470px; }
  .wrapper--mobile {
    padding-left: 0;
    padding-right: 0; }
    @media (min-width: 1010px) {
      .wrapper--mobile {
        padding-left: 1.125rem;
        padding-right: 1.125rem; } }
  .wrapper--bottomMargin {
    margin-bottom: 1rem; }
    @media (min-width: 530px) {
      .wrapper--bottomMargin {
        margin-bottom: 3.875rem; } }
  .wrapper .wrapper {
    padding-left: 0;
    padding-right: 0; }

.large-hero {
  position: relative;
  border-bottom: 10px solid #2f5572; }
  .large-hero__text-content {
    position: absolute;
    top: 50%;
    padding-top: 60px;
    text-align: center;
    width: 100%;
    left: 0;
    text-align: center;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%); }
  .large-hero__title {
    font-size: 2.4rem;
    color: #2f5572;
    font-weight: 300;
    margin: 0; }
    @media (min-width: 530px) {
      .large-hero__title {
        font-size: 4.8rem; } }
  .large-hero__subtitle {
    font-size: 1.5rem;
    color: #2f5572;
    font-weight: 300;
    margin: 0; }
    @media (min-width: 530px) {
      .large-hero__subtitle {
        font-size: 2.9rem; } }
  .large-hero__text {
    color: #FFF;
    font-size: 1.1rem;
    font-weight: 100;
    text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);
    max-width: 30rem;
    margin-left: auto;
    margin-right: auto; }
    @media (min-width: 530px) {
      .large-hero__text {
        font-size: 1.875rem; } }
  .large-hero__image {
    display: block; }

.btn {
  background-color: #2f5572;
  color: #FFF;
  text-decoration: none;
  padding: .75rem 1.2rem;
  display: inline-block; }
  .btn--orange {
    background-color: #d59541; }
  .btn--large {
    font-size: 1rem;
    padding: 0.7rem 1.5rem; }
    @media (min-width: 530px) {
      .btn--large {
        font-size: 1.25rem;
        padding: 1.1rem 1.9rem; } }

.page-section {
  padding: 1.2rem 0; }
  @media (min-width: 530px) {
    .page-section {
      padding: 4.5rem 0; } }
  .page-section--blue {
    background-color: #2f5572;
    color: #fff; }
  .page-section--backgroundImage {
    background-color: #e0e6ef; }
    @media (min-width: 1010px) {
      .page-section--backgroundImage.lazyloaded {
        background: url("src/images/testimonials-bg.jpg") top center no-repeat;
        background-size: cover; } }
  .page-section--bPadding {
    padding-bottom: 0; }
    @media (min-width: 1010px) {
      .page-section--bPadding {
        padding-bottom: 1.125rem; } }

.headline {
  font-size: 1.7rem;
  font-weight: 300;
  color: #2f5572; }
  @media (min-width: 530px) {
    .headline {
      font-size: 2.875rem; } }
  .headline__centered {
    text-align: center; }
  .headline--orange {
    color: #d59541; }
  .headline--small {
    font-size: 1.2rem; }
    @media (min-width: 530px) {
      .headline--small {
        font-size: 1.875rem; } }
  .headline--narrow {
    max-width: 500px;
    margin-left: auto;
    margin-right: auto; }
  .headline--lightFont {
    font-weight: 100; }
  .headline--bottomMarginS {
    margin-bottom: 0.5em; }
  .headline--bottomMarginL {
    margin-bottom: 1.6em; }
  .headline strong {
    font-weight: 600; }
  @media (min-width: 800px) {
    .headline--noTopMargin {
      margin-top: 0; } }

.row {
  /* without > div it would be applied to container div, not the div 
       elements that make up the column */
  /*  code for equal card height, only starting atLarge size screens
    cards div use float (see _row) 
    switch to flex box
*/
  /*  
    The large-X are the base-style applied for large screens
    The medium-X (below) are the styles for medium and up
    Some page-section require medium, others large. 
    X is based on 12 column layout, 1/3 = 4
    The modifiers for specific cases 
*/ }
  .row--columnPadding {
    margin-right: -65px; }
  .row--columnPadding > div {
    padding-right: 65px; }
  .row--columnPadding-large {
    margin-right: -100px; }
  .row--columnPadding-large > div {
    padding-right: 100px; }
  .row--columnPadding-small {
    margin-right: -45px; }
  .row--columnPadding-small > div {
    padding-right: 45px; }
  .row--topPadding {
    padding-top: 80px; }
  @media (min-width: 1010px) {
    .flexbox .row--columnHeight {
      display: -webkit-box;
      display: flex; } }
  .flexbox .row--columnHeight > div {
    float: none;
    display: -webkit-box;
    display: flex; }
  .row::after {
    content: "";
    clear: both;
    display: table; }
  @media (min-width: 1010px) {
    .row__large-4 {
      float: left;
      width: 33.33%; }
    .row__large-4--larger {
      width: 37%; }
    .row__large-8 {
      float: left;
      width: 66.66%; }
    .row__large-8--smaller {
      width: 63%; }
    .row__large-6 {
      float: left;
      width: 50%; } }
  @media (min-width: 800px) {
    .row__medium-4 {
      float: left;
      width: 33.33%; }
    .row__medium-4--larger {
      width: 37%; }
    .row__medium-8 {
      float: left;
      width: 66.66%; }
    .row__medium-8--smaller {
      width: 63%; }
    .row__medium-6 {
      float: left;
      width: 50%; } }

.generic-content p {
  line-height: 1.65;
  margin: 0 0 1.8rem 0;
  font-weight: 300; }
  @media (min-width: 530px) {
    .generic-content p {
      font-size: 1.125rem; } }

.generic-content p a {
  font-weight: 700; }

.section-title {
  font-size: 2.55rem;
  font-weight: 300;
  text-align: center; }
  @media (min-width: 530px) {
    .section-title {
      font-size: 3.75rem; } }
  .section-title strong {
    font-weight: 600; }
  .section-title__icon {
    display: block;
    margin: 0 auto .6rem auto;
    width: 64px;
    height: 64px;
    fill: #d59541; }
    .section-title__icon--blue {
      fill: #2f5572; }
    @media (min-width: 530px) {
      .section-title__icon {
        margin: 0 .6rem 0 0;
        display: inline-block;
        position: relative;
        top: 8px; } }
  .section-title--blue {
    color: #2f5572; }
  .section-title--lessMargin {
    margin-bottom: .8rem; }
    @media (min-width: 800px) {
      .section-title--lessMargin {
        margin-bottom: 1.3rem;
        margin-top: 0; } }

.feature-item {
  padding-bottom: 2.5rem; }
  @media (min-width: 530px) {
    .feature-item {
      padding-left: 100px;
      position: relative; } }
  .feature-item__icon {
    display: block;
    margin: 0 auto;
    width: 64px;
    height: 64px;
    fill: #d59541; }
    @media (min-width: 530px) {
      .feature-item__icon {
        position: absolute;
        left: 0; } }
  .feature-item__title {
    font-size: 1.6rem;
    font-weight: 300;
    margin-bottom: 0.8rem;
    margin-top: 0.7rem;
    text-align: center; }
    @media (min-width: 530px) {
      .feature-item__title {
        font-size: 1.875rem;
        margin-top: 1rem;
        text-align: left; } }

.cards {
  background-color: rgba(255, 255, 255, 0.7);
  padding: 0 1.125rem 1px 1.124rem;
  margin-bottom: 8rem;
  /*  
        reduced padding and added margin-bottom for mobile and tablet
        the 1px bottom gives the p something to push up against 
        extra margin-b has to be removed on last card (mobile)
        */ }
  .cards--last-card {
    margin-bottom: 0; }
  @media (min-width: 1010px) {
    .cards {
      padding: 0 1.8rem 1px 1.8rem;
      margin-bottom: 0; } }
  .cards__image {
    position: relative;
    top: -80px;
    border: solid 5px rgba(255, 255, 255, 0.7);
    border-radius: 50%;
    width: 160px;
    height: 160px;
    overflow: hidden;
    margin: 0 auto -80px auto; }
  .cards__title {
    color: #2f5572;
    font-size: 1.5rem;
    font-weight: 600;
    text-align: center;
    margin-bottom: 0; }
  .cards__subtitle {
    color: #d59541;
    font-size: 1.2rem;
    font-weight: 400;
    text-align: center;
    margin: .25rem 0 1rem 0; }

.site-footer {
  background-color: #2f5572;
  color: #fff;
  padding: .5rem 0;
  text-align: center; }
  .site-footer__text {
    display: block;
    margin-bottom: 1rem;
    font-weight: 200; }
    @media (min-width: 800px) {
      .site-footer__text {
        display: inline;
        padding-right: 1.5rem;
        margin-bottom: 0rem; } }

.site-header {
  position: absolute;
  top: 0;
  z-index: 1;
  width: 100%;
  padding: .6rem 0;
  -webkit-transition: background-color .3s ease-out;
  transition: background-color .3s ease-out; }
  @media (min-width: 800px) {
    .site-header {
      position: fixed;
      background-color: rgba(47, 85, 114, 0.3); }
      .site-header--dark {
        background-color: rgba(23, 56, 77, 0.7); } }
  .site-header--expand {
    background-color: rgba(47, 85, 114, 0.55); }
  @media (min-width: 800px) {
    .site-header__btn {
      float: right; } }
  .site-header__logo {
    background-color: #2f5572;
    position: absolute;
    top: 0;
    padding: 1rem 1.75rem;
    left: 50%;
    -webkit-transform: translateX(-50%) scale(0.8);
            transform: translateX(-50%) scale(0.8);
    -webkit-transform-origin: 50% 0;
            transform-origin: 50% 0;
    -webkit-transition: -webkit-transform .3s ease-out;
    transition: -webkit-transform .3s ease-out;
    transition: transform .3s ease-out;
    transition: transform .3s ease-out, -webkit-transform .3s ease-out;
    fill: #FFF; }
    @media (min-width: 800px) {
      .site-header__logo {
        left: auto;
        -webkit-transform: translateX(0);
                transform: translateX(0);
        padding: 1.5rem 3rem; }
        .site-header--dark .site-header__logo {
          -webkit-transform: scale(0.55);
                  transform: scale(0.55); } }
  .site-header__logo__icon {
    max-width: 141px;
    max-height: 59px; }
  .site-header__logo__seoText {
    font-size: 0; }
  .site-header__menuContent {
    opacity: 0;
    position: relative;
    z-index: -10;
    -webkit-transition: all .3s ease-out;
    transition: all .3s ease-out;
    padding-top: 5.625rem;
    text-align: center;
    -webkit-transform: scale(1.2);
            transform: scale(1.2); }
    @media (min-width: 800px) {
      .site-header__menuContent {
        opacity: 1;
        z-index: 1;
        padding-top: 0;
        -webkit-transform: scale(1);
                transform: scale(1); } }
    .site-header__menuContent--visible {
      opacity: 1;
      z-index: 1;
      -webkit-transform: scale(1);
              transform: scale(1); }
  .site-header__menuIcon {
    width: 1.25rem;
    height: 1.1875rem;
    position: absolute;
    top: .6rem;
    right: .6rem;
    z-index: 10; }
    @media (min-width: 800px) {
      .site-header__menuIcon {
        display: none; } }
    .site-header__menuIcon::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      background-color: #FFF;
      width: 1.25rem;
      height: .1875rem;
      -webkit-transform-origin: 0 0;
              transform-origin: 0 0;
      -webkit-transition: -webkit-transform .3s ease-out;
      transition: -webkit-transform .3s ease-out;
      transition: transform .3s ease-out;
      transition: transform .3s ease-out, -webkit-transform .3s ease-out; }
    .site-header__menuIcon__middleBar {
      position: absolute;
      top: .5rem;
      left: 0;
      background-color: #FFF;
      width: 1.25rem;
      height: .1875rem;
      -webkit-transition: all .3s ease-out;
      transition: all .3s ease-out;
      -webkit-transform-origin: 0 50%;
              transform-origin: 0 50%; }
    .site-header__menuIcon::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      background-color: #FFF;
      width: 1.25rem;
      height: .1875rem;
      -webkit-transform-origin: 0 100%;
              transform-origin: 0 100%;
      -webkit-transition: -webkit-transform .3s ease-out;
      transition: -webkit-transform .3s ease-out;
      transition: transform .3s ease-out;
      transition: transform .3s ease-out, -webkit-transform .3s ease-out; }
    .site-header__menuIcon--close::before {
      -webkit-transform: rotate(45deg) scaleX(1.25);
              transform: rotate(45deg) scaleX(1.25); }
    .site-header__menuIcon--close .site-header__menuIcon__middleBar {
      opacity: 0;
      -webkit-transform: scale(0);
              transform: scale(0); }
    .site-header__menuIcon--close::after {
      -webkit-transform: rotate(-45deg) scaleX(1.25) translateY(1px);
              transform: rotate(-45deg) scaleX(1.25) translateY(1px); }

.primaryNav {
  padding-top: 0.6rem; }
  @media (min-width: 800px) {
    .primaryNav {
      padding-top: 0; } }
  .primaryNav ul {
    padding: 0;
    margin: 0; }
    .primaryNav ul::after {
      content: "";
      clear: both;
      display: table; }
  .primaryNav li {
    display: inline-block;
    list-style: none;
    padding-right: .31rem; }
    @media (min-width: 800px) {
      .primaryNav li {
        padding-right: 1.125rem;
        float: left;
        display: block; } }
  .primaryNav li:last-child {
    padding-right: 0; }
    @media (min-width: 800px) {
      .primaryNav li:last-child {
        padding-right: 1.125rem; } }
  .primaryNav a {
    color: #fff;
    text-decoration: none;
    font-weight: 300;
    display: block;
    padding: .31rem 0.4rem;
    font-size: 0.8rem;
    background-color: rgba(47, 85, 114, 0.5); }
    @media (min-width: 800px) {
      .primaryNav a {
        padding: .75rem 0;
        font-size: 1rem;
        background-color: transparent; }
        .primaryNav a.current-link {
          color: #d59541; } }
  @media (min-width: 800px) {
    .primaryNav--floatRight {
      float: right; } }

.reveal-item {
  opacity: 0;
  -webkit-transition: all 1.5s ease-out;
  transition: all 1.5s ease-out;
  -webkit-transform: scale(1.15);
          transform: scale(1.15); }
  .reveal-item--visible {
    opacity: 1;
    -webkit-transform: scale(1);
            transform: scale(1); }

.modal {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 5;
  opacity: 0;
  visibility: hidden;
  background-color: rgba(255, 255, 255, 0.94);
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
  -webkit-transition: all .3s ease-out;
  transition: all .3s ease-out; }
  .modal--visible {
    opacity: 1;
    visibility: visible;
    -webkit-transform: scale(1);
            transform: scale(1); }
  .modal__innerCenter {
    position: absolute;
    width: 100%;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }
  .modal__description {
    font-size: 1.3rem;
    font-weight: 300;
    line-height: 1.65;
    text-align: center; }
  .modal__closeBtn {
    font-size: 2rem;
    color: #2f5572;
    position: absolute;
    top: 25px;
    right: 25px;
    -webkit-transform: scaleX(1.2);
            transform: scaleX(1.2);
    -webkit-transform-origin: 100% 0;
            transform-origin: 100% 0; }
    .modal__closeBtn:hover {
      color: #d59541;
      cursor: pointer; }

.socialIcons {
  text-align: center; }
  .socialIcons__icon {
    display: inline-block;
    width: 33%;
    height: 72px;
    fill: #fff;
    margin: 0 .875rem .875rem .875rem;
    background-color: #d59541; }
    @media (min-width: 530px) {
      .socialIcons__icon {
        width: 72px;
        height: 72px;
        margin-bottom: 0 1rem; } }
    .socialIcons__icon .icon {
      display: block;
      -webkit-transform: scale(0.5) translate(50%, 50%);
              transform: scale(0.5) translate(50%, 50%); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuc2Nzcy9ub3JtYWxpemUuc2NzcyIsIm1haW4uY3NzIiwiYmFzZS9fZ2xvYmFsLnNjc3MiLCJiYXNlL192YXJpYWJsZXMuc2NzcyIsIm1vZHVsZXMvX3dyYXBwZXIuc2NzcyIsImJhc2UvX21peGlucy5zY3NzIiwibW9kdWxlcy9fbGFyZ2UtaGVyby5zY3NzIiwibW9kdWxlcy9fYnRuLnNjc3MiLCJtb2R1bGVzL19wYWdlLXNlY3Rpb24uc2NzcyIsIm1vZHVsZXMvX2hlYWRsaW5lcy5zY3NzIiwibW9kdWxlcy9fcm93LnNjc3MiLCJtb2R1bGVzL19nZW5lcmljLWNvbnRlbnQuc2NzcyIsIm1vZHVsZXMvX3NlY3Rpb24tdGl0bGUuc2NzcyIsIm1vZHVsZXMvX2ZlYXR1cmUtaXRlbXMuc2NzcyIsIm1vZHVsZXMvX2NhcmRzLnNjc3MiLCJtb2R1bGVzL19zaXRlLWZvb3Rlci5zY3NzIiwibW9kdWxlcy9fc2l0ZS1oZWFkZXIuc2NzcyIsIm1vZHVsZXMvX3ByaW1hcnktbmF2LnNjc3MiLCJtb2R1bGVzL19yZXZlYWwtaXRlbS5zY3NzIiwibW9kdWxlcy9fbW9kYWwuc2NzcyIsIm1vZHVsZXMvX3NvY2lhbEljb25zLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUVBQUE7QUFFQTs7OztFQ0dFO0FDTEYsMEVBQVk7QUZRWjtFQUNFLHVCQUF1QjtFQUFFLE1BQUE7RUFDekIsMEJBQTBCO0VBQUUsTUFBQTtFQUM1Qiw4QkFBOEI7RUFBRSxNQUFBLEVBQU87O0FBR3pDOztFQ0dFO0FEQ0Y7RUFDRSxTQUFTLEVBQUE7O0FBR1g7K0VDQStFO0FERy9FOzs7OztFQ0dFO0FESUY7Ozs7Ozs7Ozs7Ozs7RUFhRSxjQUFjLEVBQUE7O0FBR2hCOzs7RUNERTtBRE1GOzs7O0VBSUUscUJBQXFCO0VBQUUsTUFBQTtFQUN2Qix3QkFBd0I7RUFBRSxNQUFBLEVBQU87O0FBR25DOzs7RUNERTtBRE1GO0VBQ0Us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QSxFQU81QjtJQWxCQTtNQWVPLGNBQWM7TUFDZCxpREFBd0M7Y0FBeEMseUNBQXdDLEVBQUEiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLnNjc3MgdjAuMS4wIHwgTUlUIExpY2Vuc2UgfCBiYXNlZCBvbiBnaXQuaW8vbm9ybWFsaXplICovXG5cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xuICogICAgdXNlciB6b29tLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXI6IDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xuICBtYXJnaW46IDA7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjsgLyogMyAqL1xufVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cblxuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8qKlxuICogSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAqXG4gKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWVcbiAqICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm9yZGVyOiAwOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn1cbiIsIi8qISBub3JtYWxpemUuc2NzcyB2MC4xLjAgfCBNSVQgTGljZW5zZSB8IGJhc2VkIG9uIGdpdC5pby9ub3JtYWxpemUgKi9cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xuICogICAgdXNlciB6b29tLlxuICovXG5AaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG8mZGlzcGxheT1zd2FwXCIpO1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuaHIge1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7IH1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lXG4gKiAgICAoaW5jbHVkZSBgLW1vemAgdG8gZnV0dXJlLXByb29mKS5cbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDIgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IH1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwOyB9XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjMzMzOyB9XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmEge1xuICBjb2xvcjogI2Q1OTU0MTsgfVxuXG4ud3JhcHBlciB7XG4gIHBhZGRpbmctbGVmdDogMS4xMjVyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDEuMTI1cmVtO1xuICBtYXgtd2lkdGg6IDEyMzZweDtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAud3JhcHBlci0tbWVkaXVtIHtcbiAgICBtYXgtd2lkdGg6IDk3NnB4OyB9XG4gIC53cmFwcGVyLS1uYXJyb3cge1xuICAgIG1heC13aWR0aDogNDcwcHg7IH1cbiAgLndyYXBwZXItLW1vYmlsZSB7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAxMHB4KSB7XG4gICAgICAud3JhcHBlci0tbW9iaWxlIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxLjEyNXJlbTtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMS4xMjVyZW07IH0gfVxuICAud3JhcHBlci0tYm90dG9tTWFyZ2luIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDUzMHB4KSB7XG4gICAgICAud3JhcHBlci0tYm90dG9tTWFyZ2luIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMy44NzVyZW07IH0gfVxuICAud3JhcHBlciAud3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7IH1cblxuLmxhcmdlLWhlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlci1ib3R0b206IDEwcHggc29saWQgIzJmNTU3MjsgfVxuICAubGFyZ2UtaGVyb19fdGV4dC1jb250ZW50IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgcGFkZGluZy10b3A6IDYwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGxlZnQ6IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgfVxuICAubGFyZ2UtaGVyb19fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMi40cmVtO1xuICAgIGNvbG9yOiAjMmY1NTcyO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgbWFyZ2luOiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDUzMHB4KSB7XG4gICAgICAubGFyZ2UtaGVyb19fdGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDQuOHJlbTsgfSB9XG4gIC5sYXJnZS1oZXJvX19zdWJ0aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgY29sb3I6ICMyZjU1NzI7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBtYXJnaW46IDA7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTMwcHgpIHtcbiAgICAgIC5sYXJnZS1oZXJvX19zdWJ0aXRsZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMi45cmVtOyB9IH1cbiAgLmxhcmdlLWhlcm9fX3RleHQge1xuICAgIGNvbG9yOiAjRkZGO1xuICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XG4gICAgdGV4dC1zaGFkb3c6IDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgbWF4LXdpZHRoOiAzMHJlbTtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTMwcHgpIHtcbiAgICAgIC5sYXJnZS1oZXJvX190ZXh0IHtcbiAgICAgICAgZm9udC1zaXplOiAxLjg3NXJlbTsgfSB9XG4gIC5sYXJnZS1oZXJvX19pbWFnZSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cblxuLmJ0biB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZjU1NzI7XG4gIGNvbG9yOiAjRkZGO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHBhZGRpbmc6IC43NXJlbSAxLjJyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAuYnRuLS1vcmFuZ2Uge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNkNTk1NDE7IH1cbiAgLmJ0bi0tbGFyZ2Uge1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBwYWRkaW5nOiAwLjdyZW0gMS41cmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDUzMHB4KSB7XG4gICAgICAuYnRuLS1sYXJnZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICAgICAgcGFkZGluZzogMS4xcmVtIDEuOXJlbTsgfSB9XG5cbi5wYWdlLXNlY3Rpb24ge1xuICBwYWRkaW5nOiAxLjJyZW0gMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTMwcHgpIHtcbiAgICAucGFnZS1zZWN0aW9uIHtcbiAgICAgIHBhZGRpbmc6IDQuNXJlbSAwOyB9IH1cbiAgLnBhZ2Utc2VjdGlvbi0tYmx1ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJmNTU3MjtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAucGFnZS1zZWN0aW9uLS1iYWNrZ3JvdW5kSW1hZ2Uge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMGU2ZWY7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAxMHB4KSB7XG4gICAgICAucGFnZS1zZWN0aW9uLS1iYWNrZ3JvdW5kSW1hZ2UubGF6eWxvYWRlZCB7XG4gICAgICAgIGJhY2tncm91bmQ6IHVybChcInNyYy9pbWFnZXMvdGVzdGltb25pYWxzLWJnLmpwZ1wiKSB0b3AgY2VudGVyIG5vLXJlcGVhdDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfSB9XG4gIC5wYWdlLXNlY3Rpb24tLWJQYWRkaW5nIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDEwcHgpIHtcbiAgICAgIC5wYWdlLXNlY3Rpb24tLWJQYWRkaW5nIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEuMTI1cmVtOyB9IH1cblxuLmhlYWRsaW5lIHtcbiAgZm9udC1zaXplOiAxLjdyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGNvbG9yOiAjMmY1NTcyOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1MzBweCkge1xuICAgIC5oZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDIuODc1cmVtOyB9IH1cbiAgLmhlYWRsaW5lX19jZW50ZXJlZCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5oZWFkbGluZS0tb3JhbmdlIHtcbiAgICBjb2xvcjogI2Q1OTU0MTsgfVxuICAuaGVhZGxpbmUtLXNtYWxsIHtcbiAgICBmb250LXNpemU6IDEuMnJlbTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1MzBweCkge1xuICAgICAgLmhlYWRsaW5lLS1zbWFsbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS44NzVyZW07IH0gfVxuICAuaGVhZGxpbmUtLW5hcnJvdyB7XG4gICAgbWF4LXdpZHRoOiA1MDBweDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87IH1cbiAgLmhlYWRsaW5lLS1saWdodEZvbnQge1xuICAgIGZvbnQtd2VpZ2h0OiAxMDA7IH1cbiAgLmhlYWRsaW5lLS1ib3R0b21NYXJnaW5TIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTsgfVxuICAuaGVhZGxpbmUtLWJvdHRvbU1hcmdpbkwge1xuICAgIG1hcmdpbi1ib3R0b206IDEuNmVtOyB9XG4gIC5oZWFkbGluZSBzdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDgwMHB4KSB7XG4gICAgLmhlYWRsaW5lLS1ub1RvcE1hcmdpbiB7XG4gICAgICBtYXJnaW4tdG9wOiAwOyB9IH1cblxuLnJvdyB7XG4gIC8qIHdpdGhvdXQgPiBkaXYgaXQgd291bGQgYmUgYXBwbGllZCB0byBjb250YWluZXIgZGl2LCBub3QgdGhlIGRpdiBcclxuICAgICAgIGVsZW1lbnRzIHRoYXQgbWFrZSB1cCB0aGUgY29sdW1uICovXG4gIC8qICBjb2RlIGZvciBlcXVhbCBjYXJkIGhlaWdodCwgb25seSBzdGFydGluZyBhdExhcmdlIHNpemUgc2NyZWVuc1xyXG4gICAgY2FyZHMgZGl2IHVzZSBmbG9hdCAoc2VlIF9yb3cpIFxyXG4gICAgc3dpdGNoIHRvIGZsZXggYm94XHJcbiovXG4gIC8qICBcclxuICAgIFRoZSBsYXJnZS1YIGFyZSB0aGUgYmFzZS1zdHlsZSBhcHBsaWVkIGZvciBsYXJnZSBzY3JlZW5zXHJcbiAgICBUaGUgbWVkaXVtLVggKGJlbG93KSBhcmUgdGhlIHN0eWxlcyBmb3IgbWVkaXVtIGFuZCB1cFxyXG4gICAgU29tZSBwYWdlLXNlY3Rpb24gcmVxdWlyZSBtZWRpdW0sIG90aGVycyBsYXJnZS4gXHJcbiAgICBYIGlzIGJhc2VkIG9uIDEyIGNvbHVtbiBsYXlvdXQsIDEvMyA9IDRcclxuICAgIFRoZSBtb2RpZmllcnMgZm9yIHNwZWNpZmljIGNhc2VzIFxyXG4qLyB9XG4gIC5yb3ctLWNvbHVtblBhZGRpbmcge1xuICAgIG1hcmdpbi1yaWdodDogLTY1cHg7IH1cbiAgLnJvdy0tY29sdW1uUGFkZGluZyA+IGRpdiB7XG4gICAgcGFkZGluZy1yaWdodDogNjVweDsgfVxuICAucm93LS1jb2x1bW5QYWRkaW5nLWxhcmdlIHtcbiAgICBtYXJnaW4tcmlnaHQ6IC0xMDBweDsgfVxuICAucm93LS1jb2x1bW5QYWRkaW5nLWxhcmdlID4gZGl2IHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMDBweDsgfVxuICAucm93LS1jb2x1bW5QYWRkaW5nLXNtYWxsIHtcbiAgICBtYXJnaW4tcmlnaHQ6IC00NXB4OyB9XG4gIC5yb3ctLWNvbHVtblBhZGRpbmctc21hbGwgPiBkaXYge1xuICAgIHBhZGRpbmctcmlnaHQ6IDQ1cHg7IH1cbiAgLnJvdy0tdG9wUGFkZGluZyB7XG4gICAgcGFkZGluZy10b3A6IDgwcHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMTBweCkge1xuICAgIC5mbGV4Ym94IC5yb3ctLWNvbHVtbkhlaWdodCB7XG4gICAgICBkaXNwbGF5OiBmbGV4OyB9IH1cbiAgLmZsZXhib3ggLnJvdy0tY29sdW1uSGVpZ2h0ID4gZGl2IHtcbiAgICBmbG9hdDogbm9uZTtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG4gIC5yb3c6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDEwcHgpIHtcbiAgICAucm93X19sYXJnZS00IHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDMzLjMzJTsgfVxuICAgIC5yb3dfX2xhcmdlLTQtLWxhcmdlciB7XG4gICAgICB3aWR0aDogMzclOyB9XG4gICAgLnJvd19fbGFyZ2UtOCB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHdpZHRoOiA2Ni42NiU7IH1cbiAgICAucm93X19sYXJnZS04LS1zbWFsbGVyIHtcbiAgICAgIHdpZHRoOiA2MyU7IH1cbiAgICAucm93X19sYXJnZS02IHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDUwJTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA4MDBweCkge1xuICAgIC5yb3dfX21lZGl1bS00IHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDMzLjMzJTsgfVxuICAgIC5yb3dfX21lZGl1bS00LS1sYXJnZXIge1xuICAgICAgd2lkdGg6IDM3JTsgfVxuICAgIC5yb3dfX21lZGl1bS04IHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDY2LjY2JTsgfVxuICAgIC5yb3dfX21lZGl1bS04LS1zbWFsbGVyIHtcbiAgICAgIHdpZHRoOiA2MyU7IH1cbiAgICAucm93X19tZWRpdW0tNiB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHdpZHRoOiA1MCU7IH0gfVxuXG4uZ2VuZXJpYy1jb250ZW50IHAge1xuICBsaW5lLWhlaWdodDogMS42NTtcbiAgbWFyZ2luOiAwIDAgMS44cmVtIDA7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDUzMHB4KSB7XG4gICAgLmdlbmVyaWMtY29udGVudCBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4xMjVyZW07IH0gfVxuXG4uZ2VuZXJpYy1jb250ZW50IHAgYSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuLnNlY3Rpb24tdGl0bGUge1xuICBmb250LXNpemU6IDIuNTVyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTMwcHgpIHtcbiAgICAuc2VjdGlvbi10aXRsZSB7XG4gICAgICBmb250LXNpemU6IDMuNzVyZW07IH0gfVxuICAuc2VjdGlvbi10aXRsZSBzdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cbiAgLnNlY3Rpb24tdGl0bGVfX2ljb24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMCBhdXRvIC42cmVtIGF1dG87XG4gICAgd2lkdGg6IDY0cHg7XG4gICAgaGVpZ2h0OiA2NHB4O1xuICAgIGZpbGw6ICNkNTk1NDE7IH1cbiAgICAuc2VjdGlvbi10aXRsZV9faWNvbi0tYmx1ZSB7XG4gICAgICBmaWxsOiAjMmY1NTcyOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDUzMHB4KSB7XG4gICAgICAuc2VjdGlvbi10aXRsZV9faWNvbiB7XG4gICAgICAgIG1hcmdpbjogMCAuNnJlbSAwIDA7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0b3A6IDhweDsgfSB9XG4gIC5zZWN0aW9uLXRpdGxlLS1ibHVlIHtcbiAgICBjb2xvcjogIzJmNTU3MjsgfVxuICAuc2VjdGlvbi10aXRsZS0tbGVzc01hcmdpbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogLjhyZW07IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogODAwcHgpIHtcbiAgICAgIC5zZWN0aW9uLXRpdGxlLS1sZXNzTWFyZ2luIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS4zcmVtO1xuICAgICAgICBtYXJnaW4tdG9wOiAwOyB9IH1cblxuLmZlYXR1cmUtaXRlbSB7XG4gIHBhZGRpbmctYm90dG9tOiAyLjVyZW07IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDUzMHB4KSB7XG4gICAgLmZlYXR1cmUtaXRlbSB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDEwMHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9IH1cbiAgLmZlYXR1cmUtaXRlbV9faWNvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDY0cHg7XG4gICAgaGVpZ2h0OiA2NHB4O1xuICAgIGZpbGw6ICNkNTk1NDE7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTMwcHgpIHtcbiAgICAgIC5mZWF0dXJlLWl0ZW1fX2ljb24ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDA7IH0gfVxuICAuZmVhdHVyZS1pdGVtX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjhyZW07XG4gICAgbWFyZ2luLXRvcDogMC43cmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1MzBweCkge1xuICAgICAgLmZlYXR1cmUtaXRlbV9fdGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDEuODc1cmVtO1xuICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9IH1cblxuLmNhcmRzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpO1xuICBwYWRkaW5nOiAwIDEuMTI1cmVtIDFweCAxLjEyNHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogOHJlbTtcbiAgLyogIFxyXG4gICAgICAgIHJlZHVjZWQgcGFkZGluZyBhbmQgYWRkZWQgbWFyZ2luLWJvdHRvbSBmb3IgbW9iaWxlIGFuZCB0YWJsZXRcclxuICAgICAgICB0aGUgMXB4IGJvdHRvbSBnaXZlcyB0aGUgcCBzb21ldGhpbmcgdG8gcHVzaCB1cCBhZ2FpbnN0IFxyXG4gICAgICAgIGV4dHJhIG1hcmdpbi1iIGhhcyB0byBiZSByZW1vdmVkIG9uIGxhc3QgY2FyZCAobW9iaWxlKVxyXG4gICAgICAgICovIH1cbiAgLmNhcmRzLS1sYXN0LWNhcmQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMTBweCkge1xuICAgIC5jYXJkcyB7XG4gICAgICBwYWRkaW5nOiAwIDEuOHJlbSAxcHggMS44cmVtO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfSB9XG4gIC5jYXJkc19faW1hZ2Uge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IC04MHB4O1xuICAgIGJvcmRlcjogc29saWQgNXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgd2lkdGg6IDE2MHB4O1xuICAgIGhlaWdodDogMTYwcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBtYXJnaW46IDAgYXV0byAtODBweCBhdXRvOyB9XG4gIC5jYXJkc19fdGl0bGUge1xuICAgIGNvbG9yOiAjMmY1NTcyO1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgLmNhcmRzX19zdWJ0aXRsZSB7XG4gICAgY29sb3I6ICNkNTk1NDE7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAuMjVyZW0gMCAxcmVtIDA7IH1cblxuLnNpdGUtZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJmNTU3MjtcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IC41cmVtIDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuc2l0ZS1mb290ZXJfX3RleHQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDIwMDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA4MDBweCkge1xuICAgICAgLnNpdGUtZm9vdGVyX190ZXh0IHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxLjVyZW07XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDByZW07IH0gfVxuXG4uc2l0ZS1oZWFkZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IC42cmVtIDA7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgLjNzIGVhc2Utb3V0OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA4MDBweCkge1xuICAgIC5zaXRlLWhlYWRlciB7XG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDQ3LCA4NSwgMTE0LCAwLjMpOyB9XG4gICAgICAuc2l0ZS1oZWFkZXItLWRhcmsge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIzLCA1NiwgNzcsIDAuNyk7IH0gfVxuICAuc2l0ZS1oZWFkZXItLWV4cGFuZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0NywgODUsIDExNCwgMC41NSk7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDgwMHB4KSB7XG4gICAgLnNpdGUtaGVhZGVyX19idG4ge1xuICAgICAgZmxvYXQ6IHJpZ2h0OyB9IH1cbiAgLnNpdGUtaGVhZGVyX19sb2dvIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmY1NTcyO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcGFkZGluZzogMXJlbSAxLjc1cmVtO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgc2NhbGUoMC44KTtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgMDtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzIGVhc2Utb3V0O1xuICAgIGZpbGw6ICNGRkY7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogODAwcHgpIHtcbiAgICAgIC5zaXRlLWhlYWRlcl9fbG9nbyB7XG4gICAgICAgIGxlZnQ6IGF1dG87XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgICAgcGFkZGluZzogMS41cmVtIDNyZW07IH1cbiAgICAgICAgLnNpdGUtaGVhZGVyLS1kYXJrIC5zaXRlLWhlYWRlcl9fbG9nbyB7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjU1KTsgfSB9XG4gIC5zaXRlLWhlYWRlcl9fbG9nb19faWNvbiB7XG4gICAgbWF4LXdpZHRoOiAxNDFweDtcbiAgICBtYXgtaGVpZ2h0OiA1OXB4OyB9XG4gIC5zaXRlLWhlYWRlcl9fbG9nb19fc2VvVGV4dCB7XG4gICAgZm9udC1zaXplOiAwOyB9XG4gIC5zaXRlLWhlYWRlcl9fbWVudUNvbnRlbnQge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IC0xMDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2Utb3V0O1xuICAgIHBhZGRpbmctdG9wOiA1LjYyNXJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDgwMHB4KSB7XG4gICAgICAuc2l0ZS1oZWFkZXJfX21lbnVDb250ZW50IHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7IH0gfVxuICAgIC5zaXRlLWhlYWRlcl9fbWVudUNvbnRlbnQtLXZpc2libGUge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICAgIHotaW5kZXg6IDE7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpOyB9XG4gIC5zaXRlLWhlYWRlcl9fbWVudUljb24ge1xuICAgIHdpZHRoOiAxLjI1cmVtO1xuICAgIGhlaWdodDogMS4xODc1cmVtO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IC42cmVtO1xuICAgIHJpZ2h0OiAuNnJlbTtcbiAgICB6LWluZGV4OiAxMDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA4MDBweCkge1xuICAgICAgLnNpdGUtaGVhZGVyX19tZW51SWNvbiB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAgIC5zaXRlLWhlYWRlcl9fbWVudUljb246OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XG4gICAgICB3aWR0aDogMS4yNXJlbTtcbiAgICAgIGhlaWdodDogLjE4NzVyZW07XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzIGVhc2Utb3V0OyB9XG4gICAgLnNpdGUtaGVhZGVyX19tZW51SWNvbl9fbWlkZGxlQmFyIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogLjVyZW07XG4gICAgICBsZWZ0OiAwO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcbiAgICAgIHdpZHRoOiAxLjI1cmVtO1xuICAgICAgaGVpZ2h0OiAuMTg3NXJlbTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZS1vdXQ7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDUwJTsgfVxuICAgIC5zaXRlLWhlYWRlcl9fbWVudUljb246OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcbiAgICAgIHdpZHRoOiAxLjI1cmVtO1xuICAgICAgaGVpZ2h0OiAuMTg3NXJlbTtcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDAgMTAwJTtcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3MgZWFzZS1vdXQ7IH1cbiAgICAuc2l0ZS1oZWFkZXJfX21lbnVJY29uLS1jbG9zZTo6YmVmb3JlIHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSBzY2FsZVgoMS4yNSk7IH1cbiAgICAuc2l0ZS1oZWFkZXJfX21lbnVJY29uLS1jbG9zZSAuc2l0ZS1oZWFkZXJfX21lbnVJY29uX19taWRkbGVCYXIge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7IH1cbiAgICAuc2l0ZS1oZWFkZXJfX21lbnVJY29uLS1jbG9zZTo6YWZ0ZXIge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSBzY2FsZVgoMS4yNSkgdHJhbnNsYXRlWSgxcHgpOyB9XG5cbi5wcmltYXJ5TmF2IHtcbiAgcGFkZGluZy10b3A6IDAuNnJlbTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogODAwcHgpIHtcbiAgICAucHJpbWFyeU5hdiB7XG4gICAgICBwYWRkaW5nLXRvcDogMDsgfSB9XG4gIC5wcmltYXJ5TmF2IHVsIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDsgfVxuICAgIC5wcmltYXJ5TmF2IHVsOjphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgY2xlYXI6IGJvdGg7XG4gICAgICBkaXNwbGF5OiB0YWJsZTsgfVxuICAucHJpbWFyeU5hdiBsaSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZy1yaWdodDogLjMxcmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDgwMHB4KSB7XG4gICAgICAucHJpbWFyeU5hdiBsaSB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDEuMTI1cmVtO1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAucHJpbWFyeU5hdiBsaTpsYXN0LWNoaWxkIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDgwMHB4KSB7XG4gICAgICAucHJpbWFyeU5hdiBsaTpsYXN0LWNoaWxkIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMS4xMjVyZW07IH0gfVxuICAucHJpbWFyeU5hdiBhIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiAuMzFyZW0gMC40cmVtO1xuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDcsIDg1LCAxMTQsIDAuNSk7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogODAwcHgpIHtcbiAgICAgIC5wcmltYXJ5TmF2IGEge1xuICAgICAgICBwYWRkaW5nOiAuNzVyZW0gMDtcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuICAgICAgICAucHJpbWFyeU5hdiBhLmN1cnJlbnQtbGluayB7XG4gICAgICAgICAgY29sb3I6ICNkNTk1NDE7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogODAwcHgpIHtcbiAgICAucHJpbWFyeU5hdi0tZmxvYXRSaWdodCB7XG4gICAgICBmbG9hdDogcmlnaHQ7IH0gfVxuXG4ucmV2ZWFsLWl0ZW0ge1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBhbGwgMS41cyBlYXNlLW91dDtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjE1KTsgfVxuICAucmV2ZWFsLWl0ZW0tLXZpc2libGUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTsgfVxuXG4ubW9kYWwge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogNTtcbiAgb3BhY2l0eTogMDtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOTQpO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG4gIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZS1vdXQ7IH1cbiAgLm1vZGFsLS12aXNpYmxlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTsgfVxuICAubW9kYWxfX2lubmVyQ2VudGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyB9XG4gIC5tb2RhbF9fZGVzY3JpcHRpb24ge1xuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuNjU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5tb2RhbF9fY2xvc2VCdG4ge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBjb2xvcjogIzJmNTU3MjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyNXB4O1xuICAgIHJpZ2h0OiAyNXB4O1xuICAgIHRyYW5zZm9ybTogc2NhbGVYKDEuMik7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMTAwJSAwOyB9XG4gICAgLm1vZGFsX19jbG9zZUJ0bjpob3ZlciB7XG4gICAgICBjb2xvcjogI2Q1OTU0MTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuXG4uc29jaWFsSWNvbnMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLnNvY2lhbEljb25zX19pY29uIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDMzJTtcbiAgICBoZWlnaHQ6IDcycHg7XG4gICAgZmlsbDogI2ZmZjtcbiAgICBtYXJnaW46IDAgLjg3NXJlbSAuODc1cmVtIC44NzVyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q1OTU0MTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1MzBweCkge1xuICAgICAgLnNvY2lhbEljb25zX19pY29uIHtcbiAgICAgICAgd2lkdGg6IDcycHg7XG4gICAgICAgIGhlaWdodDogNzJweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMCAxcmVtOyB9IH1cbiAgICAuc29jaWFsSWNvbnNfX2ljb24gLmljb24ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNSkgdHJhbnNsYXRlKDUwJSwgNTAlKTsgfVxuIiwiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG8mZGlzcGxheT1zd2FwJyk7XHJcblxyXG5ib2R5IHtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcclxuICAgIGNvbG9yOiAjMzMzO1xyXG59IFxyXG5cclxuaW1nIHtcclxuICAgIG1heC13aWR0aDogMTAwJTsgICAgLy8gdGhpcyBhdm9pZHMgaG9yaXpvbnRhbCBzY3JvbGxpbmdcclxuICAgIGhlaWdodDogYXV0bzsgIFxyXG59XHJcblxyXG4qIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmEge1xyXG4gICAgY29sb3I6ICRtYWluT3JhbmdlOyAgICAgLy8gYWxsIGxpbmtzIHRhZ3MgXHJcbn0iLCIkbWFpbkJsdWU6ICMyZjU1NzI7XHJcbiRtYWluT3JhbmdlOiAjZDU5NTQxO1xyXG4kbGlnaHRCbHVlOiAjZTBlNmVmO1xyXG4kZGFya0JsdWU6IHJnYmEoMjMsIDU2LCA3NywgLjcpOyIsIi53cmFwcGVyIHtcclxuICAgIHBhZGRpbmctbGVmdDogMS4xMjVyZW07XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjEyNXJlbTtcclxuICAgIG1heC13aWR0aDogMTIzNnB4OyAgLy8gYm9yZGVyLWJveCBhY3RpdmUgYWRqdXN0IGZvciBwYWRkaW5nXHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG92ZXJmbG93OiBoaWRkZW47ICAgLy8gc2VlIF9yb3cgXHJcblxyXG4gICAgJi0tbWVkaXVtIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDk3NnB4O1xyXG4gICAgfVxyXG5cclxuICAgICYtLW5hcnJvd3tcclxuICAgICAgICBtYXgtd2lkdGg6IDQ3MHB4O1xyXG4gICAgfVxyXG5cclxuICAgICYtLW1vYmlsZSB7ICAgICAgICAgICAgIC8vIG5vbmUgZm9yIG1vYmlsZSBhbmQgdGFibGV0XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMS4xMjVyZW07XHJcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEuMTI1cmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLS1ib3R0b21NYXJnaW57XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYXRTbWFsbHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMy44NzVyZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIC53cmFwcGVyIHsgIFxyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gICAgfVxyXG4gICAgLy8gY2FuY2VscyBvdXQgcGFkZGluZyBvbmx5IHdoZW4gYSB3cmFwcGVyIGNsYXNzIGZvdW5kIGluc2lkZSBhbiBleGlzdGluZyB3cmFwcGVyICAgIFxyXG59IiwiQG1peGluIGF0U21hbGwge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcbiAgXHJcbkBtaXhpbiBhdE1lZGl1bSB7XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogODAwcHgpIHtcclxuICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuICBcclxuQG1peGluIGF0TGFyZ2Uge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMTBweCkge1xyXG4gICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIGNsZWFyRmxvYXQge1xyXG4gICY6OmFmdGVye1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGNsZWFyOiBib3RoO1xyXG4gICAgZGlzcGxheTogdGFibGU7XHJcbiAgfVxyXG59IiwiLmxhcmdlLWhlcm8ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMTBweCBzb2xpZCAkbWFpbkJsdWU7IFxyXG5cclxuICAgICZfX3RleHQtY29udGVudCB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiA2MHB4OyAgLy8gYWNjb3VudCBmb3IgdGhlIGhlYWRlci1iYXIgdG8gcG9zaXRpb24gaW4gbWlkZGxlXHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgXHJcbiAgICB9XHJcbiAgICAmX190aXRsZXtcclxuICAgICAgICBmb250LXNpemU6IDIuNHJlbTtcclxuICAgICAgICBjb2xvcjogJG1haW5CbHVlO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBhdFNtYWxse1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDQuOHJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1YnRpdGxle1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xyXG4gICAgICAgIGNvbG9yOiAkbWFpbkJsdWU7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICBtYXJnaW46IDA7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0U21hbGx7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi45cmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX3RleHR7XHJcbiAgICAgICAgY29sb3I6ICNGRkY7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjFyZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDEwMDtcclxuICAgICAgICB0ZXh0LXNoYWRvdzogMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgLjEpO1xyXG4gICAgICAgIG1heC13aWR0aDogMzByZW07XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBhdFNtYWxse1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuODc1cmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2ltYWdle1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuIiwiLmJ0biB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbkJsdWU7XHJcbiAgICBjb2xvcjogI0ZGRjtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIHBhZGRpbmc6IC43NXJlbSAxLjJyZW07XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgXHJcbiAgICAmLS1vcmFuZ2Uge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbk9yYW5nZTtcclxuICAgIH1cclxuICBcclxuICAgICYtLWxhcmdlIHtcclxuICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICBwYWRkaW5nOiAwLjdyZW0gMS41cmVtO1xyXG5cclxuICAgICAgQGluY2x1ZGUgYXRTbWFsbHtcclxuICAgICAgICBmb250LXNpemU6IDEuMjVyZW07XHJcbiAgICAgICAgcGFkZGluZzogMS4xcmVtIDEuOXJlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG59IiwiLnBhZ2Utc2VjdGlvbntcclxuICAgIHBhZGRpbmc6IDEuMnJlbSAwO1xyXG5cclxuICAgIEBpbmNsdWRlIGF0U21hbGwge1xyXG4gICAgICAgIHBhZGRpbmc6IDQuNXJlbSAwO1xyXG4gICAgfVxyXG5cclxuICAgICYtLWJsdWV7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5CbHVlO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG5cclxuICAgICYtLWJhY2tncm91bmRJbWFnZXtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbGlnaHRCbHVlOyAgIFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8gbW9iaWxlIGFuZCB0YWJsZXQgZG9uJ3QgZ2V0IGhlYXZ5IGltYWdlXHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICYubGF6eWxvYWRlZCB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJ3NyYy9pbWFnZXMvdGVzdGltb25pYWxzLWJnLmpwZycpIHRvcCBjZW50ZXIgbm8tcmVwZWF0O1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgJi0tYlBhZGRpbmcge1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAwOyAgLy8gbm9uZSBmb3IgbW9iaWxlIGFuZCB0YWJsZXQgc2NyZWVucyBcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYXRMYXJnZSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxLjEyNXJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIuaGVhZGxpbmUge1xyXG4gICAgZm9udC1zaXplOiAxLjdyZW07XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgY29sb3I6ICRtYWluQmx1ZTtcclxuXHJcbiAgICBAaW5jbHVkZSBhdFNtYWxse1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMi44NzVyZW07XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY2VudGVyZWR7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG5cclxuICAgICYtLW9yYW5nZXtcclxuICAgICAgICBjb2xvcjogJG1haW5PcmFuZ2U7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tc21hbGwge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG4gICAgICAgIEBpbmNsdWRlIGF0U21hbGwge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxLjg3NXJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi0tbmFycm93IHtcclxuICAgICAgICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgICAgfVxyXG4gICAgXHJcbiAgICAmLS1saWdodEZvbnQge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAxMDA7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tYm90dG9tTWFyZ2luUyB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICYtLWJvdHRvbU1hcmdpbkwge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEuNmVtO1xyXG4gICAgfVxyXG5cclxuICAgIHN0cm9uZyB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIH1cclxuXHJcbiAgICAmLS1ub1RvcE1hcmdpbnsgICAgIC8vIHdoZW4gc3RhY2tlZCBvbiBzbWFsbCBzY3JlZW5zIGRlZmF1bHQgbWFyZ2luIGFwcGxpZXNcclxuICAgICAgICBAaW5jbHVkZSBhdE1lZGl1bXtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbn0iLCIucm93IHtcclxuXHJcbiAgICAmLS1jb2x1bW5QYWRkaW5nIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC02NXB4OyAgICAvLyBsYXN0IGNvbHVtbiBwYWRkaW5nIG92ZXJmbG93IHByb2JsZW0sIHNlZSBfd3JhcHBlclxyXG4gICAgfVxyXG5cclxuICAgICYtLWNvbHVtblBhZGRpbmcgPiBkaXYgeyAgICBcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiA2NXB4O1xyXG4gICAgfVxyXG4gICAgLyogd2l0aG91dCA+IGRpdiBpdCB3b3VsZCBiZSBhcHBsaWVkIHRvIGNvbnRhaW5lciBkaXYsIG5vdCB0aGUgZGl2IFxyXG4gICAgICAgZWxlbWVudHMgdGhhdCBtYWtlIHVwIHRoZSBjb2x1bW4gKi8gXHJcblxyXG4gICAgJi0tY29sdW1uUGFkZGluZy1sYXJnZSB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAtMTAwcHg7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICYtLWNvbHVtblBhZGRpbmctbGFyZ2UgPiBkaXYgeyAgICBcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMDBweDtcclxuICAgIH1cclxuXHJcbiAgICAmLS1jb2x1bW5QYWRkaW5nLXNtYWxsIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC00NXB4O1xyXG4gICAgfVxyXG5cclxuICAgICYtLWNvbHVtblBhZGRpbmctc21hbGwgPiBkaXYgeyAgICBcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiA0NXB4O1xyXG4gICAgfVxyXG5cclxuICAgICYtLXRvcFBhZGRpbmd7ICAgICAgICAgIC8vIHNlZSBjYXJkc19faW1hZ2VcclxuICAgICAgICBwYWRkaW5nLXRvcDogODBweDtcclxuICAgIH1cclxuXHJcbi8qICBjb2RlIGZvciBlcXVhbCBjYXJkIGhlaWdodCwgb25seSBzdGFydGluZyBhdExhcmdlIHNpemUgc2NyZWVuc1xyXG4gICAgY2FyZHMgZGl2IHVzZSBmbG9hdCAoc2VlIF9yb3cpIFxyXG4gICAgc3dpdGNoIHRvIGZsZXggYm94XHJcbiovXHJcbiAgICAuZmxleGJveCAmLS1jb2x1bW5IZWlnaHR7XHJcbiAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmID4gZGl2IHtcclxuICAgICAgICAgICAgZmxvYXQ6IG5vbmU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgfVxyXG4gICAgfSAgIFxyXG5cclxuICAgIEBpbmNsdWRlIGNsZWFyRmxvYXQ7IFxyXG5cclxuLyogIFxyXG4gICAgVGhlIGxhcmdlLVggYXJlIHRoZSBiYXNlLXN0eWxlIGFwcGxpZWQgZm9yIGxhcmdlIHNjcmVlbnNcclxuICAgIFRoZSBtZWRpdW0tWCAoYmVsb3cpIGFyZSB0aGUgc3R5bGVzIGZvciBtZWRpdW0gYW5kIHVwXHJcbiAgICBTb21lIHBhZ2Utc2VjdGlvbiByZXF1aXJlIG1lZGl1bSwgb3RoZXJzIGxhcmdlLiBcclxuICAgIFggaXMgYmFzZWQgb24gMTIgY29sdW1uIGxheW91dCwgMS8zID0gNFxyXG4gICAgVGhlIG1vZGlmaWVycyBmb3Igc3BlY2lmaWMgY2FzZXMgXHJcbiovXHJcbiAgICBAaW5jbHVkZSBhdExhcmdlIHtcclxuXHJcbiAgICAgICAgJl9fbGFyZ2UtNCB7XHJcbiAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICAgICAgICB3aWR0aDogMzMuMzMlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbGFyZ2UtNC0tbGFyZ2Vye1xyXG4gICAgICAgICAgICB3aWR0aDogMzclO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbGFyZ2UtOCB7XHJcbiAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICAgICAgICB3aWR0aDogNjYuNjYlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbGFyZ2UtOC0tc21hbGxlciB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA2MyU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19sYXJnZS02IHtcclxuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIGF0TWVkaXVtIHtcclxuICAgICAgICAvLyAgVGhlIGNvbHVtbi1YIGFyZSB0aGUgYmFzZS1zdHlsZXMgYXBwbGllZCBmb3IgbWVkaXVtIHNjcmVlbnMgYW5kIHVwXHJcbiAgICAgICAgLy8gIFggaXMgYmFzZWQgb24gMTIgY29sdW1uIGxheW91dCwgMS8zID0gNFxyXG4gICAgICAgIC8vICBUaGUgbW9kaWZpZXJzIGZvciBzcGVjaWZpYyBjYXNlc1xyXG4gICAgICAgICZfX21lZGl1bS00IHtcclxuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiAzMy4zMyU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19tZWRpdW0tNC0tbGFyZ2Vye1xyXG4gICAgICAgICAgICB3aWR0aDogMzclO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbWVkaXVtLTgge1xyXG4gICAgICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICAgICAgd2lkdGg6IDY2LjY2JTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX21lZGl1bS04LS1zbWFsbGVyIHtcclxuICAgICAgICAgICAgd2lkdGg6IDYzJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX21lZGl1bS02IHtcclxuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmdlbmVyaWMtY29udGVudCB7XHJcbiAgICBwIHtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS42NTtcclxuICAgICAgICBtYXJnaW46IDAgMCAxLjhyZW0gMDsgICAvLyBmZWF0dXJlcy1pdGVtICBwIHJlcXVpcmVzIDAgdG9wIG1hcmdpblxyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0U21hbGwge1xyXG4gICAgICAgICAgIGZvbnQtc2l6ZTogMS4xMjVyZW07XHJcbiAgICAgICAgfVxyXG4gICAgfSAgXHJcbiAgICBwIGEge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICB9XHJcbn1cclxuIiwiLnNlY3Rpb24tdGl0bGV7XHJcbiAgICBmb250LXNpemU6IDIuNTVyZW07XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgIEBpbmNsdWRlIGF0U21hbGx7XHJcbiAgICAgICAgZm9udC1zaXplOiAzLjc1cmVtO1xyXG4gICAgfVxyXG5cclxuICAgIHN0cm9uZyB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIH1cclxuXHJcbiAgICAmX19pY29uIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jazsgICAgIC8vIG9uIGl0J3Mgb3duIGxpbmUgb24gbW9iaWxlXHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG8gLjZyZW0gYXV0bztcclxuICAgICAgICB3aWR0aDogNjRweDtcclxuICAgICAgICBoZWlnaHQ6IDY0cHg7XHJcbiAgICAgICAgZmlsbDogJG1haW5PcmFuZ2U7XHJcblxyXG4gICAgICAgICYtLWJsdWV7XHJcbiAgICAgICAgICAgIGZpbGw6ICRtYWluQmx1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0U21hbGx7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMCAuNnJlbSAwIDA7IC8vIG5leHQgdG8gdGl0bGUgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICB0b3A6IDhweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi0tYmx1ZSB7XHJcbiAgICAgICAgY29sb3I6ICRtYWluQmx1ZTtcclxuICAgIH1cclxuXHJcbiAgICAmLS1sZXNzTWFyZ2luIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAuOHJlbTtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYXRNZWRpdW0ge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjNyZW07XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmZlYXR1cmUtaXRlbSB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMi41cmVtOyAgICAgLy8gc2VwZXJhdGUgdGhlIGZlYXR1cmUgcm93c1xyXG5cclxuICAgIEBpbmNsdWRlIGF0U21hbGwge1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMTAwcHg7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2ljb257XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgd2lkdGg6IDY0cHg7XHJcbiAgICAgICAgaGVpZ2h0OiA2NHB4O1xyXG4gICAgICAgIGZpbGw6ICRtYWluT3JhbmdlO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBhdFNtYWxsIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX3RpdGxle1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMC44cmVtO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDAuN3JlbTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0U21hbGwge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuODc1cmVtO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5jYXJkcyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LCAuNyk7XHJcbiAgICBwYWRkaW5nOiAwIDEuMTI1cmVtIDFweCAxLjEyNHJlbTtcclxuICAgIG1hcmdpbi1ib3R0b206IDhyZW07ICAgICBcclxuICAgICAgICBcclxuICAgICAgICAvKiAgXHJcbiAgICAgICAgcmVkdWNlZCBwYWRkaW5nIGFuZCBhZGRlZCBtYXJnaW4tYm90dG9tIGZvciBtb2JpbGUgYW5kIHRhYmxldFxyXG4gICAgICAgIHRoZSAxcHggYm90dG9tIGdpdmVzIHRoZSBwIHNvbWV0aGluZyB0byBwdXNoIHVwIGFnYWluc3QgXHJcbiAgICAgICAgZXh0cmEgbWFyZ2luLWIgaGFzIHRvIGJlIHJlbW92ZWQgb24gbGFzdCBjYXJkIChtb2JpbGUpXHJcbiAgICAgICAgKi9cclxuXHJcbiAgICAmLS1sYXN0LWNhcmQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcblxyXG4gICAgQGluY2x1ZGUgYXRMYXJnZSB7XHJcbiAgICAgICAgcGFkZGluZzogMCAxLjhyZW0gMXB4IDEuOHJlbTsgICBcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2ltYWdle1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0b3A6IC04MHB4OyAgICAgICAgIC8vIGhhbGYgb2YgdGhlIGltZyBoZWlnaHRcclxuICAgICAgICBib3JkZXI6IHNvbGlkIDVweCByZ2JhKDI1NSwyNTUsMjU1LCAuNyk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIHdpZHRoOiAxNjBweDtcclxuICAgICAgICBoZWlnaHQ6IDE2MHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvIC04MHB4IGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGl0bGV7XHJcbiAgICAgICAgY29sb3I6ICRtYWluQmx1ZTtcclxuICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3N1YnRpdGxle1xyXG4gICAgICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcclxuICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW46IC4yNXJlbSAwIDFyZW0gMDtcclxuICAgIH1cclxufSIsIi5zaXRlLWZvb3RlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluQmx1ZTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogLjVyZW0gMDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jazsgICAgICAgICAvLyBzZXBlcmF0ZSBsaW5lIGZvciBidXR0b24gYW5kIHRleHQgb24gbW9iaWxlXHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICAgICAgICBmb250LXdlaWdodDogMjAwO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBhdE1lZGl1bSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcclxuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMS41cmVtO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwcmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5zaXRlLWhlYWRlcntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IC42cmVtIDA7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4zcyBlYXNlLW91dDtcclxuXHJcbiAgICBAaW5jbHVkZSBhdE1lZGl1bSB7ICAgICAvLyBubyBuYXZCYXIgb24gc21hbGwgc2NyZWVuc1xyXG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDsgICAgLy8gc3RpY2t5IGhlYWRlciBmcm9tIG1lZGl1bSBvbndhcmRzXHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkbWFpbkJsdWUsLjMpO1xyXG4gICAgXHJcbiAgICAgICAgJi0tZGFyayB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkYXJrQmx1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi0tZXhwYW5kIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRtYWluQmx1ZSwgMC41NSk7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYnRuIHtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYXRNZWRpdW17XHJcbiAgICAgICAgICAgIGZsb2F0OnJpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19sb2dvIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbkJsdWU7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDsgICAgICAgICAgICAgICAgIC8vIGNhbmNlbHMgb3V0IHRoZSBzaXRlLWhlYWRlciBwYWRkaW5nLXRvcFxyXG4gICAgICAgIHBhZGRpbmc6IDFyZW0gMS43NXJlbTtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHNjYWxlKC44KTtcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgMDtcclxuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzIGVhc2Utb3V0O1xyXG4gICAgICAgIGZpbGw6ICNGRkY7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0TWVkaXVte1xyXG4gICAgICAgICAgICBsZWZ0OiBhdXRvO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDEuNXJlbSAzcmVtO1xyXG5cclxuICAgICAgICAgICAgLnNpdGUtaGVhZGVyLS1kYXJrICYge1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSguNTUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fbG9nb19faWNvbiB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxNDFweDtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA1OXB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2xvZ29fX3Nlb1RleHQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMDsgICAgICAgLy8gb3IgdGV4dC1pbmRlbnQ6IC05OTk5cHhcclxuICAgIH1cclxuXHJcbiAgICAmX19tZW51Q29udGVudHtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB6LWluZGV4OiAtMTA7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlLW91dDtcclxuICAgICAgICBwYWRkaW5nLXRvcDogNS42MjVyZW07XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYXRNZWRpdW17XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAwOyAgICAgLy8gY2FuY2VsIG91dCB0aGUgYmFzZSBwYWRkaW5nLXRvcFxyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi0tdmlzaWJsZXtcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fbWVudUljb24ge1xyXG4gICAgICAgIHdpZHRoOiAxLjI1cmVtO1xyXG4gICAgICAgIGhlaWdodDogMS4xODc1cmVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IC42cmVtO1xyXG4gICAgICAgIHJpZ2h0OiAuNnJlbTtcclxuICAgICAgICB6LWluZGV4OiAxMDtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYXRNZWRpdW0ge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjo6YmVmb3Jle1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcclxuICAgICAgICAgICAgd2lkdGg6IDEuMjVyZW07XHJcbiAgICAgICAgICAgIGhlaWdodDogLjE4NzVyZW07XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDAgMDtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcyBlYXNlLW91dDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJl9fbWlkZGxlQmFye1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRvcDogLjVyZW07XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxLjI1cmVtO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IC4xODc1cmVtO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2Utb3V0O1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDUwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6OmFmdGVye1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgbGVmdDowIDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcclxuICAgICAgICAgICAgd2lkdGg6IDEuMjVyZW07XHJcbiAgICAgICAgICAgIGhlaWdodDogLjE4NzVyZW07XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDAgMTAwJTtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcyBlYXNlLW91dDtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtLWNsb3NlIHtcclxuICAgICAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSBzY2FsZVgoMS4yNSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLnNpdGUtaGVhZGVyX19tZW51SWNvbl9fbWlkZGxlQmFyIHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgc2NhbGVYKDEuMjUpIHRyYW5zbGF0ZVkoMXB4KTsgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIucHJpbWFyeU5hdiB7XHJcblxyXG4gICAgcGFkZGluZy10b3A6IDAuNnJlbTtcclxuXHJcbiAgICBAaW5jbHVkZSBhdE1lZGl1bXtcclxuICAgICAgICBwYWRkaW5nLXRvcDogMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgdWwge1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIEBpbmNsdWRlIGNsZWFyRmxvYXQgICAgIC8vIGNsZWFycyB0aGUgbGkgZmxvYXRzXHJcbiAgICB9XHJcblxyXG4gICAgbGkge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IC4zMXJlbTtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYXRNZWRpdW17XHJcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEuMTI1cmVtO1xyXG4gICAgICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGxpOmxhc3QtY2hpbGR7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMDtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYXRNZWRpdW17XHJcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEuMTI1cmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBwYWRkaW5nOiAuMzFyZW0gMC40cmVtO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMC44cmVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJG1haW5CbHVlLCAwLjUpO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBhdE1lZGl1bXtcclxuICAgICAgICAgICAgcGFkZGluZzogLjc1cmVtIDA7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcblxyXG4gICAgICAgICAgICAmLmN1cnJlbnQtbGlua3tcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLS1mbG9hdFJpZ2h0IHtcclxuICAgICAgICBAaW5jbHVkZSBhdE1lZGl1bXtcclxuICAgICAgICAgICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuIiwiLnJldmVhbC1pdGVtIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMS41cyBlYXNlLW91dDtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xNSk7XHJcblxyXG4gICAgJi0tdmlzaWJsZSB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgfVxyXG59XHJcblxyXG4iLCIubW9kYWwge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgei1pbmRleDogNTtcclxuXHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG5cclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjk0KTtcclxuXHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2Utb3V0O1xyXG5cclxuICAgICYtLXZpc2libGUge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2lubmVyQ2VudGVyIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2Rlc2NyaXB0aW9ue1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNjU7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2Nsb3NlQnRuIHtcclxuICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgY29sb3I6ICRtYWluQmx1ZTtcclxuXHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMjVweDtcclxuICAgICAgICByaWdodDogMjVweDtcclxuXHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMS4yKTtcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAxMDAlIDA7XHJcblxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBjb2xvcjogJG1haW5PcmFuZ2U7XHJcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIuc29jaWFsSWNvbnMge1xyXG4gICAgXHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgJl9faWNvbiB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAzMyU7XHJcbiAgICAgICAgaGVpZ2h0OiA3MnB4O1xyXG4gICAgICAgIGZpbGw6ICNmZmY7XHJcbiAgICAgICAgbWFyZ2luOiAwIC44NzVyZW0gLjg3NXJlbSAuODc1cmVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluT3JhbmdlO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBhdFNtYWxsIHtcclxuICAgICAgICAgICAgd2lkdGg6IDcycHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNzJweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMCAxcmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmljb24ge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSguNSkgdHJhbnNsYXRlKDUwJSwgNTAlKTsgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0= */
