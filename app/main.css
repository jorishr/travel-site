/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

body {
  font-family: 'roboto, sans-serif';
  color: #333; }

img {
  max-width: 100%;
  height: auto; }

* {
  box-sizing: border-box; }

a {
  color: #d59541; }

.wrapper {
  padding-left: 1.125rem;
  padding-right: 1.125rem;
  max-width: 1236px;
  margin-left: auto;
  margin-right: auto;
  overflow: hidden; }
  .wrapper--medium {
    max-width: 976px; }
  .wrapper--narrow {
    max-width: 470px; }
  .wrapper--mobile {
    padding-left: 0;
    padding-right: 0; }
    @media (min-width: 1010px) {
      .wrapper--mobile {
        padding-left: 1.125rem;
        padding-right: 1.125rem; } }
  .wrapper--bottomMargin {
    margin-bottom: 1rem; }
    @media (min-width: 530px) {
      .wrapper--bottomMargin {
        margin-bottom: 3.875rem; } }
  .wrapper .wrapper {
    padding-left: 0;
    padding-right: 0; }

.large-hero {
  position: relative;
  border-bottom: 10px solid #2f5572; }
  .large-hero__text-content {
    position: absolute;
    top: 50%;
    padding-top: 60px;
    text-align: center;
    width: 100%;
    left: 0;
    text-align: center;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%); }
  .large-hero__title {
    font-size: 2.4rem;
    color: #2f5572;
    font-weight: 300;
    margin: 0; }
    @media (min-width: 530px) {
      .large-hero__title {
        font-size: 4.8rem; } }
  .large-hero__subtitle {
    font-size: 1.5rem;
    color: #2f5572;
    font-weight: 300;
    margin: 0; }
    @media (min-width: 530px) {
      .large-hero__subtitle {
        font-size: 2.9rem; } }
  .large-hero__text {
    color: #FFF;
    font-size: 1.1rem;
    font-weight: 100;
    text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);
    max-width: 30rem;
    margin-left: auto;
    margin-right: auto; }
    @media (min-width: 530px) {
      .large-hero__text {
        font-size: 1.875rem; } }
  .large-hero__image {
    display: block; }

.btn {
  background-color: #2f5572;
  color: #FFF;
  text-decoration: none;
  padding: .75rem 1.2rem;
  display: inline-block; }
  .btn--orange {
    background-color: #d59541; }
  .btn--large {
    font-size: 1rem;
    padding: 0.7rem 1.5rem; }
    @media (min-width: 530px) {
      .btn--large {
        font-size: 1.25rem;
        padding: 1.1rem 1.9rem; } }

.page-section {
  padding: 1.2rem 0; }
  @media (min-width: 530px) {
    .page-section {
      padding: 4.5rem 0; } }
  .page-section--blue {
    background-color: #2f5572;
    color: #fff; }
  .page-section--backgroundImage {
    background-color: #e0e6ef; }
    @media (min-width: 1010px) {
      .page-section--backgroundImage.lazyloaded {
        background: url("src/images/testimonials-bg.jpg") top center no-repeat;
        background-size: cover; } }
  .page-section--bPadding {
    padding-bottom: 0; }
    @media (min-width: 1010px) {
      .page-section--bPadding {
        padding-bottom: 1.125rem; } }

.headline {
  font-size: 1.7rem;
  font-weight: 300;
  color: #2f5572; }
  @media (min-width: 530px) {
    .headline {
      font-size: 2.875rem; } }
  .headline__centered {
    text-align: center; }
  .headline--orange {
    color: #d59541; }
  .headline--small {
    font-size: 1.2rem; }
    @media (min-width: 530px) {
      .headline--small {
        font-size: 1.875rem; } }
  .headline--narrow {
    max-width: 500px;
    margin-left: auto;
    margin-right: auto; }
  .headline--lightFont {
    font-weight: 100; }
  .headline--bottomMarginS {
    margin-bottom: 0.5em; }
  .headline--bottomMarginL {
    margin-bottom: 1.6em; }
  .headline strong {
    font-weight: 600; }
  @media (min-width: 800px) {
    .headline--noTopMargin {
      margin-top: 0; } }

.row {
  /* without > div it would be applied to container div, not the div 
       elements that make up the column */
  /*  code for equal card height, only starting atLarge size screens
    cards div use float (see _row) 
    switch to flex box
*/
  /*  
    The large-X are the base-style applied for large screens
    The medium-X (below) are the styles for medium and up
    Some page-section require medium, others large. 
    X is based on 12 column layout, 1/3 = 4
    The modifiers for specific cases 
*/ }
  .row--columnPadding {
    margin-right: -65px; }
  .row--columnPadding > div {
    padding-right: 65px; }
  .row--columnPadding-large {
    margin-right: -100px; }
  .row--columnPadding-large > div {
    padding-right: 100px; }
  .row--columnPadding-small {
    margin-right: -45px; }
  .row--columnPadding-small > div {
    padding-right: 45px; }
  .row--topPadding {
    padding-top: 80px; }
  @media (min-width: 1010px) {
    .flexbox .row--columnHeight {
      display: flex; } }
  .flexbox .row--columnHeight > div {
    float: none;
    display: flex; }
  .row::after {
    content: "";
    clear: both;
    display: table; }
  @media (min-width: 1010px) {
    .row__large-4 {
      float: left;
      width: 33.33%; }
    .row__large-4--larger {
      width: 37%; }
    .row__large-8 {
      float: left;
      width: 66.66%; }
    .row__large-8--smaller {
      width: 63%; }
    .row__large-6 {
      float: left;
      width: 50%; } }
  @media (min-width: 800px) {
    .row__medium-4 {
      float: left;
      width: 33.33%; }
    .row__medium-4--larger {
      width: 37%; }
    .row__medium-8 {
      float: left;
      width: 66.66%; }
    .row__medium-8--smaller {
      width: 63%; }
    .row__medium-6 {
      float: left;
      width: 50%; } }

.generic-content p {
  line-height: 1.65;
  margin: 0 0 1.8rem 0;
  font-weight: 300; }
  @media (min-width: 530px) {
    .generic-content p {
      font-size: 1.125rem; } }

.generic-content p a {
  font-weight: 700; }

.section-title {
  font-size: 2.55rem;
  font-weight: 300;
  text-align: center; }
  @media (min-width: 530px) {
    .section-title {
      font-size: 3.75rem; } }
  .section-title strong {
    font-weight: 600; }
  .section-title__icon {
    display: block;
    margin: 0 auto .6rem auto;
    width: 64px;
    height: 64px;
    fill: #d59541; }
    .section-title__icon--blue {
      fill: #2f5572; }
    @media (min-width: 530px) {
      .section-title__icon {
        margin: 0 .6rem 0 0;
        display: inline-block;
        position: relative;
        top: 8px; } }
  .section-title--blue {
    color: #2f5572; }
  .section-title--lessMargin {
    margin-bottom: .8rem; }
    @media (min-width: 800px) {
      .section-title--lessMargin {
        margin-bottom: 1.3rem;
        margin-top: 0; } }

.feature-item {
  padding-bottom: 2.5rem; }
  @media (min-width: 530px) {
    .feature-item {
      padding-left: 100px;
      position: relative; } }
  .feature-item__icon {
    display: block;
    margin: 0 auto;
    width: 64px;
    height: 64px;
    fill: #d59541; }
    @media (min-width: 530px) {
      .feature-item__icon {
        position: absolute;
        left: 0; } }
  .feature-item__title {
    font-size: 1.6rem;
    font-weight: 300;
    margin-bottom: 0.8rem;
    margin-top: 0.7rem;
    text-align: center; }
    @media (min-width: 530px) {
      .feature-item__title {
        font-size: 1.875rem;
        margin-top: 1rem;
        text-align: left; } }

.cards {
  background-color: rgba(255, 255, 255, 0.7);
  padding: 0 1.125rem 1px 1.124rem;
  margin-bottom: 8rem;
  /*  
        reduced padding and added margin-bottom for mobile and tablet
        the 1px bottom gives the p something to push up against 
        extra margin-b has to be removed on last card (mobile)
        */ }
  .cards--last-card {
    margin-bottom: 0; }
  @media (min-width: 1010px) {
    .cards {
      padding: 0 1.8rem 1px 1.8rem;
      margin-bottom: 0; } }
  .cards__image {
    position: relative;
    top: -80px;
    border: solid 5px rgba(255, 255, 255, 0.7);
    border-radius: 50%;
    width: 160px;
    height: 160px;
    overflow: hidden;
    margin: 0 auto -80px auto; }
  .cards__title {
    color: #2f5572;
    font-size: 1.5rem;
    font-weight: 600;
    text-align: center;
    margin-bottom: 0; }
  .cards__subtitle {
    color: #d59541;
    font-size: 1.2rem;
    font-weight: 400;
    text-align: center;
    margin: .25rem 0 1rem 0; }

.site-footer {
  background-color: #2f5572;
  color: #fff;
  padding: .5rem 0;
  text-align: center; }
  .site-footer__text {
    display: block;
    margin-bottom: 1rem;
    font-weight: 200; }
    @media (min-width: 800px) {
      .site-footer__text {
        display: inline;
        padding-right: 1.5rem;
        margin-bottom: 0rem; } }

.site-header {
  position: absolute;
  top: 0;
  z-index: 1;
  width: 100%;
  padding: .6rem 0;
  transition: background-color .3s ease-out; }
  @media (min-width: 800px) {
    .site-header {
      position: fixed;
      background-color: rgba(47, 85, 114, 0.3); }
      .site-header--dark {
        background-color: rgba(23, 56, 77, 0.7); } }
  .site-header--expand {
    background-color: rgba(47, 85, 114, 0.55); }
  @media (min-width: 800px) {
    .site-header__btn {
      float: right; } }
  .site-header__logo {
    background-color: #2f5572;
    position: absolute;
    top: 0;
    padding: 1rem 1.75rem;
    left: 50%;
    -webkit-transform: translateX(-50%) scale(0.8);
            transform: translateX(-50%) scale(0.8);
    -webkit-transform-origin: 50% 0;
            transform-origin: 50% 0;
    transition: -webkit-transform .3s ease-out;
    transition: transform .3s ease-out;
    transition: transform .3s ease-out, -webkit-transform .3s ease-out; }
    @media (min-width: 800px) {
      .site-header__logo {
        left: auto;
        -webkit-transform: translateX(0);
                transform: translateX(0);
        padding: 1.5rem 3rem; }
        .site-header--dark .site-header__logo {
          -webkit-transform: scale(0.55);
                  transform: scale(0.55); } }
  .site-header__logo__seoText {
    font-size: 0; }
  .site-header__menuContent {
    opacity: 0;
    position: relative;
    z-index: -10;
    transition: all .3s ease-out;
    padding-top: 5.625rem;
    text-align: center;
    -webkit-transform: scale(1.2);
            transform: scale(1.2); }
    @media (min-width: 800px) {
      .site-header__menuContent {
        opacity: 1;
        z-index: 1;
        padding-top: 0;
        -webkit-transform: scale(1);
                transform: scale(1); } }
    .site-header__menuContent--visible {
      opacity: 1;
      z-index: 1;
      -webkit-transform: scale(1);
              transform: scale(1); }
  .site-header__menuIcon {
    width: 1.25rem;
    height: 1.1875rem;
    position: absolute;
    top: .6rem;
    right: .6rem;
    z-index: 10; }
    @media (min-width: 800px) {
      .site-header__menuIcon {
        display: none; } }
    .site-header__menuIcon::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      background-color: #FFF;
      width: 1.25rem;
      height: .1875rem;
      -webkit-transform-origin: 0 0;
              transform-origin: 0 0;
      transition: -webkit-transform .3s ease-out;
      transition: transform .3s ease-out;
      transition: transform .3s ease-out, -webkit-transform .3s ease-out; }
    .site-header__menuIcon__middleBar {
      position: absolute;
      top: .5rem;
      left: 0;
      background-color: #FFF;
      width: 1.25rem;
      height: .1875rem;
      transition: all .3s ease-out;
      -webkit-transform-origin: 0 50%;
              transform-origin: 0 50%; }
    .site-header__menuIcon::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      background-color: #FFF;
      width: 1.25rem;
      height: .1875rem;
      -webkit-transform-origin: 0 100%;
              transform-origin: 0 100%;
      transition: -webkit-transform .3s ease-out;
      transition: transform .3s ease-out;
      transition: transform .3s ease-out, -webkit-transform .3s ease-out; }
    .site-header__menuIcon--close::before {
      -webkit-transform: rotate(45deg) scaleX(1.25);
              transform: rotate(45deg) scaleX(1.25); }
    .site-header__menuIcon--close .site-header__menuIcon__middleBar {
      opacity: 0;
      -webkit-transform: scale(0);
              transform: scale(0); }
    .site-header__menuIcon--close::after {
      -webkit-transform: rotate(-45deg) scaleX(1.25) translateY(1px);
              transform: rotate(-45deg) scaleX(1.25) translateY(1px); }

.primaryNav {
  padding-top: 0.6rem; }
  @media (min-width: 800px) {
    .primaryNav {
      padding-top: 0; } }
  .primaryNav ul {
    padding: 0;
    margin: 0; }
    .primaryNav ul::after {
      content: "";
      clear: both;
      display: table; }
  .primaryNav li {
    display: inline-block;
    list-style: none;
    padding-right: .31rem; }
    @media (min-width: 800px) {
      .primaryNav li {
        padding-right: 1.125rem;
        float: left;
        display: block; } }
  .primaryNav li:last-child {
    padding-right: 0; }
    @media (min-width: 800px) {
      .primaryNav li:last-child {
        padding-right: 1.125rem; } }
  .primaryNav a {
    color: #fff;
    text-decoration: none;
    font-weight: 300;
    display: block;
    padding: .31rem 0.4rem;
    font-size: 0.8rem;
    background-color: rgba(47, 85, 114, 0.5); }
    @media (min-width: 800px) {
      .primaryNav a {
        padding: .75rem 0;
        font-size: 1rem;
        background-color: transparent; }
        .primaryNav a.current-link {
          color: #d59541; } }
  @media (min-width: 800px) {
    .primaryNav--floatRight {
      float: right; } }

.reveal-item {
  opacity: 0;
  transition: all 1.5s ease-out;
  -webkit-transform: scale(1.15);
          transform: scale(1.15); }
  .reveal-item--visible {
    opacity: 1;
    -webkit-transform: scale(1);
            transform: scale(1); }

.modal {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 5;
  opacity: 0;
  visibility: hidden;
  background-color: rgba(255, 255, 255, 0.94);
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
  transition: all .3s ease-out; }
  .modal--visible {
    opacity: 1;
    visibility: visible;
    -webkit-transform: scale(1);
            transform: scale(1); }
  .modal__innerCenter {
    position: absolute;
    width: 100%;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }
  .modal__description {
    font-size: 1.3rem;
    font-weight: 300;
    line-height: 1.65;
    text-align: center; }
  .modal__closeBtn {
    font-size: 2rem;
    color: #2f5572;
    position: absolute;
    top: 25px;
    right: 25px;
    -webkit-transform: scaleX(1.2);
            transform: scaleX(1.2);
    -webkit-transform-origin: 100% 0;
            transform-origin: 100% 0; }
    .modal__closeBtn:hover {
      color: #d59541;
      cursor: pointer; }

.socialIcons {
  text-align: center; }
  .socialIcons__icon {
    display: inline-block;
    width: 33%;
    height: 72px;
    fill: #fff;
    margin: 0 .875rem .875rem .875rem;
    background-color: #d59541; }
    @media (min-width: 530px) {
      .socialIcons__icon {
        width: 72px;
        height: 72px;
        margin-bottom: 0 1rem; } }
    .socialIcons__icon .icon {
      display: block;
      -webkit-transform: scale(0.5) translate(50%, 50%);
              transform: scale(0.5) translate(50%, 50%); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
